<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="updateLists">
    <parameter name="listId" description="The numerical id of the list."/>
    <parameter name="slug" description="Can identify a list by its slug "/>
    <parameter name="name" description="The name for the list."/>
    <parameter name="mode"
               description="Whether your list is public or private. Values can be public or private."/>
    <parameter name="ownerScreenName"
               description="The screen name of the user who owns the list being requested by a slug."/>
    <parameter name="description" description="The description to give the list."/>
    <parameter name="ownerId"
               description="The user ID of the user who owns the list being requested by a slug."/>
    <sequence>
        <class name="org.wso2.carbon.connector.twitter.RemoveTwitterContext"/>
        <property name="uri.var.listId" expression="$func:listId"/>
        <property name="uri.var.slug" expression="$func:slug"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.mode" expression="$func:mode"/>
        <property name="uri.var.ownerScreenName" expression="$func:ownerScreenName"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.ownerId" expression="$func:ownerId"/>
        <script language="js">
            <![CDATA[
                // optional url param variables
                var listId = mc.getProperty('uri.var.listId');
                var slug = mc.getProperty('uri.var.slug');
                var name  = mc.getProperty('uri.var.name');
                var mode  = mc.getProperty('uri.var.mode');
                var ownerScreenName  = mc.getProperty('uri.var.ownerScreenName');
                var description  = mc.getProperty('uri.var.description');
                var ownerId  = mc.getProperty('uri.var.ownerId');
                var uriParams = '';
                if (listId != null && listId != "") {
                    uriParams = 'list_id=' + listId + '&';
                    listId = 'list_id=' + encodeURIComponent(listId);
                    mc.setProperty('uri.var.listId', listId)
                }
                if (slug != null && slug != "") {
                    uriParams += 'slug=' + slug + '&';
                    slug = 'slug=' + encodeURIComponent(slug);
                    mc.setProperty('uri.var.slug', slug)
                }
                if (name != null && name != "") {
                    uriParams += 'name=' + name + '&';
                    name = 'name=' + encodeURIComponent(name);
                    mc.setProperty('uri.var.name', name)
                }
                if (mode != null && mode != "") {
                    uriParams += 'mode=' + mode + '&';
                    mode = 'mode=' + encodeURIComponent(mode);
                    mc.setProperty('uri.var.mode', mode)
                }
                if (ownerScreenName != null && ownerScreenName != "") {
                    uriParams += 'owner_screen_name=' + ownerScreenName + '&';
                    ownerScreenName = 'owner_screen_name=' + encodeURIComponent(ownerScreenName);
                    mc.setProperty('uri.var.ownerScreenName', ownerScreenName)
                }
                if (ownerId != null && ownerId != "") {
                    uriParams += 'owner_id=' + ownerId + '&';
                    ownerId = 'owner_id=' + encodeURIComponent(ownerId);
                    mc.setProperty('uri.var.ownerId', ownerId)
                }
                if (description != null && description != "") {
                    uriParams += 'description=' + description + '&';
                    description = 'description=' + encodeURIComponent(description);
                    mc.setProperty('uri.var.description', description)
                }
                if(uriParams != ''){
                    mc.setProperty('uri.var.uriParams' , uriParams.toString().substring(0, uriParams.toString().lastIndexOf("&")));
                }
            ]]>
        </script>
        <property name="uri.var.apiUrl.final"
                  expression="fn:concat(get-property('uri.var.apiUrl'),'/1.1/lists/update.json')"/>
        <property name="uri.var.httpMethod" value="POST"/>
        <class name="org.wso2.carbon.connector.twitter.TwitterSignatureGeneration"/>
        <header name="Authorization" expression="get-property('uri.var.signature')" scope="transport"/>
        <call>
            <endpoint>
                <http method="POST"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/1.1/lists/update.json?{uri.var.uriParams}"/>
            </endpoint>
        </call>
        <!-- Remove custom header information in response -->
        <header name="x-access-level" scope="transport" action="remove"/>
        <header name="x-twitter-response-tags" scope="transport" action="remove"/>
        <header name="x-transaction" scope="transport" action="remove"/>
        <header name="x-response-time" scope="transport" action="remove"/>
        <header name="x-connection-hash" scope="transport" action="remove"/>
        <header name="x-content-type-options" scope="transport" action="remove"/>
        <header name="x-frame-options" scope="transport" action="remove"/>
        <header name="x-rate-limit-limit" scope="transport" action="remove"/>
        <header name="x-rate-limit-remaining" scope="transport" action="remove"/>
        <header name="x-rate-limit-reset" scope="transport" action="remove"/>
        <header name="x-xss-protection" scope="transport" action="remove"/>
    </sequence>
</template>